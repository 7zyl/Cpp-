#include<iostream>
#include<string>

using namespace std;

class Cube
{
public:																//设置长宽高，并获取长宽高
	void setL(int L)
	{
		m_L = L;
	}
	int getL()
	{
		return m_L;
	}

	void setW(int W)
	{
		m_W = W;
	}
	int getW()
	{
		return m_W;
	}

	void setH(int H)
	{
		m_H = H;
	}
	int getH()
	{
		return m_H;
	}

	int area()																				//计算面积
	{
		return 2 * (m_L * m_W + m_L * m_H + m_W * m_H);
	}
	int V()																					//计算体积
	{
		return m_L * m_W * m_H;
	}
	//利用成员函数判断两个立方体是否相等
	bool isSameByClass(Cube& c)															//只需要传一个参数与本身相比较
	{
		if (m_L == c.getL() && m_W == c.getW() && m_H == c.getH())	//私有属性在类内可以访问
		{
			return true;
		}
		return false;
	}

private:														//属性一般设为私有
	int m_L;
	int m_W;
	int m_H;
};

//全局函数判断两个立方体是否相等
bool isSame(Cube& c1, Cube& c2)
{
	if (c1.getL() == c2.getL() && c1.getW() == c2.getW() && c1.getH() == c2.getH())
	{
		return true;
	}
	return false;
}

int main()
{
	Cube c1;
	c1.setL(10);
	c1.setW(10);
	c1.setH(10);
	cout << c1.area() << endl;
	cout << c1.V() << endl;

	Cube c2;
	c2.setL(10);
	c2.setW(10);
	c2.setH(10);
	//利用全局函数判断
	bool ret = isSame(c1, c2);
	if (ret)
	{
		cout << "全局函数判断：c1和c2相等" << endl;
	}
	else
	{
		cout << "全局函数判断：c1和c2不相等" << endl;
	}
	//利用成员函数判断
	ret = c1.isSameByClass(c2);
	if (ret)
	{
		cout << "成员函数判断：c1和c2相等" << endl;
	}
	else
	{
		cout << "成员函数判断：c1和c2不相等" << endl;
	}

	system("pause");
	return 0;
}
