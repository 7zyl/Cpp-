#include<iostream>
using namespace std;
#include<string>

//抽象CPU类
class CPU
{
public:
	//抽象的计算函数
	virtual void calculator() = 0;
};

//抽象显卡类
class VideoCard
{
public:
	//抽象的显示函数
	virtual void display() = 0;
};

//抽象内存条类
class Memory
{
public:
	//抽象的存储函数
	virtual void storage() = 0;
};

class Computer
{
public:
	Computer(CPU* cpu, VideoCard* vc, Memory* mem) :m_cpu(cpu), m_vc(vc), m_mem(mem) {} // 初始化列表

	//工作函数
	void work()
	{
		//让零件工作，调用接口--多态
		m_cpu->calculator();
		m_vc->display();
		m_mem->storage();
	}

	//提供一个析构函数释放3个电脑零件
	~Computer()
	{
		if (m_cpu != NULL)
		{
			delete m_cpu;
			m_cpu = NULL;
		}
		if (m_vc != NULL)
		{
			delete m_vc;
			m_vc = NULL;
		}
		if (m_mem != NULL)
		{
			delete m_mem;
			m_mem = NULL;
		}
	}
private:
	CPU* m_cpu;			//cpu零件指针
	VideoCard* m_vc;		//显卡零件指针
	Memory* m_mem;	//内存条零件指针
};

//intel
class intelCPU :public CPU
{
public:
	virtual void calculator()
	{
		cout << "intel的cpu开始计算了" << endl;
	}
};

class intelVideoCard :public VideoCard
{
public:
	virtual void display()
	{
		cout << "intel的显卡开始显示了" << endl;
	}
};

class intelMemory :public Memory
{
public:
	virtual void storage()
	{
		cout << "intel的内存条开始存储了" << endl;
	}
};

//联想
class LenovoCPU :public CPU
{
public:
	virtual void calculator()
	{
		cout << "Lenovo的cpu开始计算了" << endl;
	}
};

class LenovoVideoCard :public VideoCard
{
public:
	virtual void display()
	{
		cout << "Lenovo的显卡开始显示了" << endl;
	}
};

class LenovoMemory :public Memory
{
public:
	virtual void storage()
	{
		cout << "Lenovo的内存条开始存储了" << endl;
	}
};

void test01()
{
	//创建第一台电脑零件
	CPU* intelcpu = new intelCPU;					//父类的指针指向子类对象
	VideoCard* intelvc = new intelVideoCard;
	Memory* intelmem = new intelMemory;

	//创建第一台电脑
	Computer* c1 = new Computer(intelcpu, intelvc, intelmem);
	c1->work();
	delete c1;

	cout << "--------------------------" << endl;

	//创建第二台电脑零件
	CPU* lenovocpu = new LenovoCPU;
	VideoCard* lenovovc = new LenovoVideoCard;
	Memory* lenovomem = new LenovoMemory;

	//创建第二台电脑
	Computer* c2 = new Computer(lenovocpu, lenovovc, lenovomem);
	c2->work();
	delete c2;

}

int main()
{
	test01();
	system("pause");
	return 0;
}
